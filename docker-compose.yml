version: "3.9"
services:
  db:
    container_name: railscounter2-mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: railscounter2_development
    ports:
      - "27017:27017"
    networks:
      mongo:
        aliases:
          - mongo
    volumes:
      - "mongodb:/var/lib/mongodb/data"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: railscounter2-mongodb://root:root@mongo:27017/
    networks:
      - mongo
    depends_on:
      - db

      # POSTGRESQL
      # docker-compose run --no-deps web rails new . --force --database=postgresql

      # MONGO
      # docker-compose run --no-deps web rails new . --skip-active-record --skip-bundle
      # IMPORTANT : DO NOT OVERRIDE GEMFILE WHEN ASKED FOR MONGODB
      # then add gem 'mongoid', '~> 7.3', '>= 7.3.3' to Gemfile
      # launch bundle

      # "web" reference the web service( image) below, the container in wich we will apply the command
      # "no-deps" build the targeted service without running all linked services
      # USE DOCKER RUN to create a container with a rails project in it BEFORE BUILDING

  web:
    container_name: railscounter2-web
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/railscounter2
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - mongo

networks:
  mongo:

volumes:
  mongodb:


